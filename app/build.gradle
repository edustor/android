apply plugin: 'com.android.application'
apply plugin: "kotlin-android"
apply plugin: 'kotlin-android-extensions'
apply plugin: 'realm-android'
apply plugin: "com.palantir.configuration-resolver"

def debugPass = getEnv("EDUSTOR_ANDROID_DEBUG_KEY_PASSWORD")
def ciPass = getEnv("EDUSTOR_ANDROID_CI_KEY_PASSWORD")
def releasePass = getEnv("EDUSTOR_ANDROID_RELEASE_KEY_PASSWORD")
def keyFile = getEnv("EDUSTOR_ANDROID_RELEASE_KEY_LOCATION")

def CI_BUILD_NUMBER = getEnv("BUILD_NUMBER")
def BRANCH_NAME = getEnv("BRANCH_NAME")

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.1"
    defaultConfig {
        applicationId "ru.wutiarn.edustor.android"
        minSdkVersion 21
        targetSdkVersion 24
        versionCode 14
        versionName "0.5.0"
        multiDexEnabled true
    }
    lintOptions {
        abortOnError false
        disable 'InvalidPackage'
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    //noinspection GroovyAssignabilityCheck
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'

        debug.res.srcDirs += 'src/debug/res'
        CI.res.srcDirs += 'src/release/res'
        unsignedCI.res.srcDirs += 'src/release/res'
        release.res.srcDirs += 'src/release/res'
    }

    signingConfigs {
        debug {
            storeFile file("../keys/debug.keystore")
            storePassword debugPass
            keyAlias "debug"
            keyPassword debugPass
        }

        CI {
            storeFile file("../keys/CI.keystore")
            storePassword ciPass
            keyAlias "ci"
            keyPassword ciPass

        }

        release {
            storeFile keyFile != null ? file(keyFile) : null
            storePassword releasePass
            keyAlias "release"
            keyPassword releasePass
        }
    }
    buildTypes {

        debug {
            signingConfig signingConfigs["debug"]
            applicationIdSuffix ".debug"
            if (CI_BUILD_NUMBER != null) {
                versionNameSuffix "-$BRANCH_NAME.$CI_BUILD_NUMBER"
            }
        }

        CI {
            if (CI_BUILD_NUMBER != null) {
                versionNameSuffix "-$BRANCH_NAME.$CI_BUILD_NUMBER"
            }
            signingConfig signingConfigs["CI"]
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
        }

        release {
            if (keyFile != null && releasePass != null) {
                signingConfig signingConfigs["release"]
            }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

kapt {
    generateStubs = true
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    kapt "com.google.dagger:dagger-compiler:2.0.1"
    compile 'com.google.dagger:dagger:2.0.1'
    compile 'javax.annotation:jsr250-api:1.0'


    compile 'com.google.android.gms:play-services-auth:9.6.1'
    compile 'com.google.firebase:firebase-core:9.2.1'
    compile 'com.google.firebase:firebase-messaging:9.6.1'


    compile 'com.android.support:support-v4:24.2.1'
    compile 'com.android.support:appcompat-v7:24.2.1'
    compile 'com.android.support:design:24.2.1'

    compile('com.github.joschi.jackson:jackson-datatype-threetenbp:2.6.4') {
        exclude group: 'org.threeten', module: 'threetenbp'
    }

    compile 'com.google.zxing:android-integration:3.2.1'
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'io.reactivex:rxjava:1.1.1'
    compile 'io.reactivex:rxkotlin:0.40.1'
    compile 'com.squareup.retrofit2:retrofit:2.0.0-beta4'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.0-beta4'
    compile 'com.squareup.retrofit2:converter-jackson:2.0.0-beta4'
    compile 'com.hannesdorfmann.mosby:mvp:2.0.1'
    compile 'com.jakewharton.threetenabp:threetenabp:1.0.3'
    compile 'com.wang.avi:library:1.0.2'
    compile 'com.squareup:otto:1.3.8'

//    kaptTest "com.google.dagger:dagger-compiler:2.0.1"
//    testCompile 'junit:junit:4.12'
//    testCompile 'org.robolectric:robolectric:3.0'
//    testCompile 'org.mockito:mockito-core:2.0.43-beta'

}

apply plugin: 'com.google.gms.google-services'

String getEnv(String name) {
    return project.hasProperty(name) ? project.properties.get(name) : System.getenv(name)
}